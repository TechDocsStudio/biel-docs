openapi: 3.0.3
info:
  title: Biel
  version: 0.1.0
  description: The most amazing SaaS application the world has ever seen
paths:
  /{team_slug}/team/api/invitations/:
    get:
      operationId: invitations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvitationList'
          description: ''
    post:
      operationId: invitations_create
      parameters:
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
  /{team_slug}/team/api/invitations/{id}/:
    get:
      operationId: invitations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    put:
      operationId: invitations_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Invitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Invitation'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    patch:
      operationId: invitations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInvitation'
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invitation'
          description: ''
    delete:
      operationId: invitations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this invitation.
        required: true
      - in: path
        name: team_slug
        schema:
          type: string
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/auth/logout/:
    get:
      operationId: api_auth_logout_retrieve
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
    post:
      operationId: api_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: api_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/token/verify/:
    post:
      operationId: api_auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/auth/user/:
    get:
      operationId: api_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: api_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: api_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /api/v1/chat/:
    post:
      operationId: api_v1_chat_create
      description: Send a message to the bot and get a response. Returns 201 if a
        new chat is created, 200 if using an existing chat.
      tags:
      - chat
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              message:
                type: string
              project_slug:
                type: string
              chat_uuid:
                type: string
                format: uuid
              url:
                type: string
              email:
                type: string
          required:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_message_id:
                    type: string
                  ai_message:
                    type: object
                    properties:
                      from:
                        type: string
                      message:
                        type: string
                      messageId:
                        type: string
                      isPartial:
                        type: boolean
                      timestamp:
                        type: string
                      sources:
                        type: array
                  chat_uuid:
                    type: string
          description: ''
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_message_id:
                    type: string
                  ai_message:
                    type: object
                    properties:
                      from:
                        type: string
                      message:
                        type: string
                      messageId:
                        type: string
                      isPartial:
                        type: boolean
                      timestamp:
                        type: string
                      sources:
                        type: array
                  chat_uuid:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /api/v1/messages/{uuid}/feedback/:
    post:
      operationId: api_v1_messages_feedback_create
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/projects/{slug}/:
    get:
      operationId: api_v1_projects_retrieve
      description: Get project details
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - project
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/v1/projects/{slug}/search/:
    get:
      operationId: api_v1_projects_search_list
      description: Search for relevant documents within a project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - project
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentSearchResult'
          description: ''
  /api/v1/projects/{slug}/search/click/:
    post:
      operationId: api_v1_projects_search_click_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - project
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/projects/{slug}/sources/:
    get:
      operationId: api_v1_projects_sources_retrieve
      description: List all sources (files, URLs, and sitemaps) associated with a
        project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - project
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
          description: ''
    post:
      operationId: api_v1_projects_sources_create
      description: Upload files, URLs, or sitemaps to a specific project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - project
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              files:
                type: array
                items:
                  type: string
                  format: binary
              urls:
                type: array
                items:
                  type: string
                  format: uri
              sitemaps:
                type: array
                items:
                  type: string
                  format: uri
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  sources:
                    type: array
                    items:
                      type: object
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /api/v1/projects/{slug}/sources/{source_type}/{source_id}/:
    delete:
      operationId: api_v1_projects_sources_destroy
      description: Delete a specific source (file, URL, or sitemap) from a project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      - in: path
        name: source_id
        schema:
          type: integer
        required: true
      - in: path
        name: source_type
        schema:
          type: string
        required: true
      tags:
      - project
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /teams/api/teams/:
    get:
      operationId: teams_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeamList'
          description: ''
    post:
      operationId: teams_create
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /teams/api/teams/{id}/:
    get:
      operationId: teams_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    put:
      operationId: teams_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    patch:
      operationId: teams_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTeam'
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
    delete:
      operationId: teams_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '204':
          description: No response body
  /teams/api/user-invitations/:
    get:
      operationId: user_invitations
      tags:
      - teams
      security:
      - cookieAuth: []
      - basicAuth: []
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationsResponse'
          description: ''
components:
  schemas:
    DocumentSearchResult:
      type: object
      properties:
        content:
          type: string
        metadata:
          type: object
          additionalProperties: {}
      required:
      - content
      - metadata
    Filter:
      type: object
      properties:
        url:
          type: string
          format: uri
          maxLength: 200
        position:
          type: integer
          maximum: 2147483647
          minimum: 0
        title:
          type: string
          maxLength: 255
      required:
      - position
      - title
      - url
    Invitation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team:
          type: integer
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        invited_by:
          type: string
          readOnly: true
        is_accepted:
          type: boolean
      required:
      - email
      - id
      - invited_by
      - team
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    Membership:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
          readOnly: true
        first_name:
          type: string
          readOnly: true
        last_name:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - display_name
      - first_name
      - id
      - last_name
      - role
      - user_id
    OpenInvitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        team_name:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        verified:
          type: boolean
          readOnly: true
      required:
      - email
      - id
      - team_name
      - verified
    PaginatedInvitationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
    PaginatedTeamList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    PatchedInvitation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        team:
          type: integer
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        invited_by:
          type: string
          readOnly: true
        is_accepted:
          type: boolean
    PatchedTeam:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
          readOnly: true
        dashboard_url:
          type: string
          readOnly: true
        is_admin:
          type: boolean
          readOnly: true
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    Project:
      type: object
      properties:
        whitelabel:
          type: string
          readOnly: true
        suggested_questions:
          type: string
          readOnly: true
        initial_message:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          readOnly: true
      required:
      - filters
      - initial_message
      - suggested_questions
      - whitelabel
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password1
      - password2
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    RoleEnum:
      enum:
      - admin
      - maintainer
      - editor
      - viewer
      type: string
      description: |-
        * `admin` - Administrator
        * `maintainer` - Maintainer
        * `editor` - Editor
        * `viewer` - Viewer
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        slug:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        members:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
          readOnly: true
        invitations:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
          readOnly: true
        dashboard_url:
          type: string
          readOnly: true
        is_admin:
          type: boolean
          readOnly: true
      required:
      - dashboard_url
      - id
      - invitations
      - is_admin
      - members
      - name
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    UserInvitationsResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/OpenInvitation'
      required:
      - results
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
