openapi: 3.0.3
info:
  title: Biel.ai REST API
  version: 0.1.0
  description: |
    Biel is an AI-powered documentation assistant that helps teams create, maintain, and interact with their technical documentation. 
    It uses advanced language models to understand and answer questions about your documentation, making it easier for teams to find the information they need.

    Key Features:
    - AI-powered documentation search and Q&A
    - Support for multiple documentation sources (files, URLs, sitemaps)
    - Team collaboration and access control
    - Customizable project settings and initial messages
    - Real-time chat interface for documentation queries

    For more information, visit https://biel.ai

    > **Note:** The API is only available for Business and Enterprise users. If you're interested in using the API, please [contact us](https://biel.ai/contact) to upgrade your plan.

    ## Authorization
    Biel API uses API key authentication for secure access to private projects. If your project is marked as private, you'll need to include an API key in your requests. For public projects, no authentication is required.

    To get your API key:

    1. Log in to your Biel account at [app.biel.ai](https://app.biel.ai)
    2. Navigate to Team Settings
    3. Find the API Key section
    4. Copy your API key

    Include your API key in the Authorization header for all API requests to private projects:
    ```
    Authorization: <your-api-key>
    ```

    Note: Keep your API key secure and never share it publicly. If you suspect your API key has been compromised, you can regenerate it in the Team Settings.
tags:
  - name: Chat
    description: Endpoints for interacting with the AI chat functionality
  - name: Projects
    description: Endpoints for managing projects and their sources
paths:
  /api/v1/chat/:
    post:
      operationId: sendMessage
      summary: Send a message to the AI chat
      description: Send a message to the bot and get a response. Returns 201 if a
        new chat is created, 200 if using an existing chat.
      tags:
      - Chat
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              message:
                type: string
              project_slug:
                type: string
              chat_uuid:
                type: string
                format: uuid
              url:
                type: string
              email:
                type: string
          required:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_message_id:
                    type: string
                  ai_message:
                    type: object
                    properties:
                      from:
                        type: string
                      message:
                        type: string
                      messageId:
                        type: string
                      isPartial:
                        type: boolean
                      timestamp:
                        type: string
                      sources:
                        type: array
                  chat_uuid:
                    type: string
          description: 'Message sent successfully'
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_message_id:
                    type: string
                  ai_message:
                    type: object
                    properties:
                      from:
                        type: string
                      message:
                        type: string
                      messageId:
                        type: string
                      isPartial:
                        type: boolean
                      timestamp:
                        type: string
                      sources:
                        type: array
                  chat_uuid:
                    type: string
          description: 'New chat created successfully'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: 'Bad request'
  /api/v1/messages/{uuid}/feedback/:
    post:
      operationId: sendFeedback
      summary: Send feedback for a message
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
        description: UUID of the message to provide feedback for
      tags:
      - Chat
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: 'Feedback sent successfully'
  /api/v1/projects/{slug}/:
    get:
      operationId: getProject
      summary: Get project details
      description: Retrieve detailed information about a specific project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
        description: Project slug identifier
      tags:
      - Projects
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: 'Project details retrieved successfully'
  /api/v1/projects/{slug}/search/:
    get:
      operationId: searchProject
      summary: Search project sources
      description: Search for relevant sources within a project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
        description: Project slug identifier
      tags:
      - Projects
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SoruceSearchResult'
          description: 'Search results retrieved successfully'
  /api/v1/projects/{slug}/search/click/:
    post:
      operationId: trackSearchClick
      summary: Track search result click
      description: Record when a user clicks on a search result
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
        description: Project slug identifier
      tags:
      - Projects
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: 'Click tracked successfully'
  /api/v1/projects/{slug}/sources/:
    get:
      operationId: listSources
      summary: List project sources
      description: List all sources (files, URLs, and sitemaps) associated with a project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
        description: Project slug identifier
      tags:
      - Projects
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
          description: 'Sources listed successfully'
    post:
      operationId: addSource
      summary: Add project source
      description: Upload files, URLs, or sitemaps to a specific project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
        description: Project slug identifier
      tags:
      - Projects
      requestBody:
        content:
          type:
            schema:
              type: object
              additionalProperties: {}
              description: Unspecified request body
          properties:
            schema:
              files:
                type: array
                items:
                  type: string
                  format: binary
              urls:
                type: array
                items:
                  type: string
                  format: uri
              sitemaps:
                type: array
                items:
                  type: string
                  format: uri
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  sources:
                    type: array
                    items:
                      type: object
          description: 'Source added successfully'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: 'Bad request'
  /api/v1/projects/{slug}/sources/{source_type}/{source_id}/:
    delete:
      operationId: deleteSource
      summary: Delete project source
      description: Delete a specific source (file, URL, or sitemap) from a project
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
        description: Project slug identifier
      - in: path
        name: source_id
        schema:
          type: integer
        required: true
        description: ID of the source to delete
      - in: path
        name: source_type
        schema:
          type: string
        required: true
        description: Type of the source (file, url, or sitemap)
      tags:
      - Projects
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
          description: 'Source deleted successfully'
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: 'Bad request'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: 'Source not found'
components:
  schemas:
    SoruceSearchResult:
      type: object
      properties:
        content:
          type: string
        metadata:
          type: object
          additionalProperties: {}
      required:
      - content
      - metadata
    Filter:
      type: object
      properties:
        url:
          type: string
          format: uri
          maxLength: 200
        position:
          type: integer
          maximum: 2147483647
          minimum: 0
        title:
          type: string
          maxLength: 255
      required:
      - position
      - title
      - url
    Project:
      type: object
      properties:
        whitelabel:
          type: string
          readOnly: true
        suggested_questions:
          type: string
          readOnly: true
        initial_message:
          type: string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          readOnly: true
      required:
      - filters
      - initial_message
      - suggested_questions
      - whitelabel
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
