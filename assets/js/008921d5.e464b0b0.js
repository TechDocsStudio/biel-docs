"use strict";(self.webpackChunkbiel=self.webpackChunkbiel||[]).push([[960],{1962:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"integrations/github-workflow","title":"GitHub workflow integation","description":"Automatically sync your Biel.ai project when documentation changes using GitHub Actions.","source":"@site/docs/integrations/github-workflow.md","sourceDirName":"integrations","slug":"/integrations/github-workflow","permalink":"/integrations/github-workflow","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"GitHub workflow","description":"Automatically sync your Biel.ai project when documentation changes using GitHub Actions.","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"MCP server","permalink":"/integrations/mcp-server"},"next":{"title":"Introduction","permalink":"/api/biel-ai-rest-api-beta"}}');var s=i(74848),o=i(28453);const r={sidebar_label:"GitHub workflow",description:"Automatically sync your Biel.ai project when documentation changes using GitHub Actions.",sidebar_position:2},l="GitHub workflow integation",c={},d=[{value:"Before you begin",id:"before-you-begin",level:2},{value:"Choose your automation approach",id:"choose-your-automation-approach",level:2},{value:"Set up content sync (recommended)",id:"set-up-content-sync-recommended",level:2},{value:"1. Create the workflow file",id:"1-create-the-workflow-file",level:3},{value:"2. Configure GitHub secrets",id:"2-configure-github-secrets",level:3},{value:"3. Customize the trigger paths",id:"3-customize-the-trigger-paths",level:3},{value:"Set up site deployment (for private sites)",id:"set-up-site-deployment-for-private-sites",level:2},{value:"1. Create the deployment workflow",id:"1-create-the-deployment-workflow",level:3},{value:"2. Update environment variables",id:"2-update-environment-variables",level:3},{value:"3. Add your build steps",id:"3-add-your-build-steps",level:3},{value:"Test your workflow",id:"test-your-workflow",level:2},{value:"Get help",id:"get-help",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"github-workflow-integation",children:"GitHub workflow integation"})}),"\n",(0,s.jsx)(n.p,{children:"Use GitHub Actions to automatically update your Biel.ai project when you push documentation changes. This keeps your AI assistant synchronized with your latest content."}),"\n",(0,s.jsx)(n.h2,{id:"before-you-begin",children:"Before you begin"}),"\n",(0,s.jsx)(n.p,{children:"Ensure you have the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A Biel.ai Business or Enterprise plan (required for API access)"}),"\n",(0,s.jsxs)(n.li,{children:["An API key from your team settings with these permissions:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"project_sources_create"})," (to upload site files)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"project_sync"})," (to trigger content crawls)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Your project slug from your Biel.ai dashboard"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"choose-your-automation-approach",children:"Choose your automation approach"}),"\n",(0,s.jsx)(n.p,{children:"You can automate two types of updates:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Action"}),(0,s.jsx)(n.th,{children:"Purpose"}),(0,s.jsx)(n.th,{children:"When to use"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Content sync"})}),(0,s.jsx)(n.td,{children:"Trigger a crawl of existing sources"}),(0,s.jsx)(n.td,{children:"Sources already configured in dashboard; content has changed"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Site deployment"})}),(0,s.jsx)(n.td,{children:"Upload and index a built static site"}),(0,s.jsx)(n.td,{children:"Site is private (behind VPN, private GitHub Pages)"})]})]})]}),"\n",(0,s.jsxs)(n.admonition,{title:"Recommended approach",type:"tip",children:[(0,s.jsx)(n.p,{children:"Configure URL sources in your Biel.ai dashboard, then use content sync to trigger crawls."}),(0,s.jsxs)(n.p,{children:["Use ",(0,s.jsx)(n.strong,{children:"site deployment"})," only for private sites that Biel.ai cannot access directly."]})]}),"\n",(0,s.jsx)(n.h2,{id:"set-up-content-sync-recommended",children:"Set up content sync (recommended)"}),"\n",(0,s.jsx)(n.p,{children:"Use this workflow when your sources are already configured in your Biel.ai dashboard."}),"\n",(0,s.jsx)(n.h3,{id:"1-create-the-workflow-file",children:"1. Create the workflow file"}),"\n",(0,s.jsxs)(n.p,{children:["Create ",(0,s.jsx)(n.code,{children:".github/workflows/sync-biel.yml"})," in your repository:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'name: Sync Biel.ai\n\non:\n  push:\n    branches: [main]\n    paths: \n      - \'docs/**\'\n      - \'*.md\'\n  workflow_dispatch:\n\njobs:\n  sync:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Sync Biel.ai Project\n        run: |\n          echo "Syncing Biel.ai project..."\n          if ! curl -f -X POST \\\n            -H "Authorization: Api-Key ${{ secrets.BIEL_API_TOKEN }}" \\\n            -H "Content-Type: application/json" \\\n            https://app.biel.ai/api/v1/projects/${{ secrets.BIEL_PROJECT_SLUG }}/sources/sync/; then\n            echo "\u274c Failed to sync Biel.ai project"\n            exit 1\n          fi\n          echo "\u2705 Project synced successfully"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-configure-github-secrets",children:"2. Configure GitHub secrets"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["In your GitHub repository, go to ",(0,s.jsx)(n.strong,{children:"Settings"})," > ",(0,s.jsx)(n.strong,{children:"Secrets and variables"})," > ",(0,s.jsx)(n.strong,{children:"Actions"})]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"New repository secret"})," and add:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Name"}),": ",(0,s.jsx)(n.code,{children:"BIEL_API_TOKEN"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Secret"}),": Your Biel.ai API key"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For more information, see the GitHub documentation on ",(0,s.jsx)(n.a,{href:"https://docs.github.com/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions",children:"Using secrets in GitHub Actions"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"3-customize-the-trigger-paths",children:"3. Customize the trigger paths"}),"\n",(0,s.jsxs)(n.p,{children:["Update the ",(0,s.jsx)(n.code,{children:"paths"})," section to match your documentation structure:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"paths: \n  - 'docs/**'           # Trigger when docs folder changes\n  - 'content/**'        # Or your content folder\n  - 'README.md'         # Or specific files\n  - '**/*.md'           # Or all markdown files\n"})}),"\n",(0,s.jsx)(n.h2,{id:"set-up-site-deployment-for-private-sites",children:"Set up site deployment (for private sites)"}),"\n",(0,s.jsx)(n.p,{children:"Use this workflow only when your site is not publicly accessible."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Site uploads are limited to 250MB. ",(0,s.jsx)(n.a,{href:"https://biel.ai/contact",children:"Contact us"})," for higher limits."]})}),"\n",(0,s.jsx)(n.h3,{id:"1-create-the-deployment-workflow",children:"1. Create the deployment workflow"}),"\n",(0,s.jsxs)(n.p,{children:["Create ",(0,s.jsx)(n.code,{children:".github/workflows/deploy-biel.yml"})," in your repository:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'name: Deploy to Biel.ai\n\non:\n  push:\n    branches: [main]\n    paths: \n      - \'docs/**\'\n      - \'*.md\'\n  workflow_dispatch:\n\nenv:\n  BIEL_API_BASE_URL: \'https://app.biel.ai\'\n  BIEL_PROJECT_SLUG: \'your-project-slug\'\n  BIEL_SITE_NAME: \'wiki\'  # Lowercase identifier for your site\n  BIEL_BASE_URL: \'https://your-site.com\'\n  BUILD_OUTPUT_DIR: \'site\'\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      # Add your site build steps here\n      # Example:\n      # - name: Build site\n      #   run: |\n      #     npm install\n      #     npm run build\n\n      - name: Deploy to Biel AI\n        if: github.ref == \'refs/heads/main\'\n        run: |\n          cd $BUILD_OUTPUT_DIR && zip -r ../docs-site.zip . && cd ..\n          \n          echo "Uploading site to Biel AI..."\n          if ! curl -f -X POST \\\n            -H "Authorization: Api-Key ${{ secrets.BIEL_API_TOKEN }}" \\\n            -F "site_zip=@docs-site.zip" \\\n            -F "site_name=$BIEL_SITE_NAME" \\\n            -F "base_url=$BIEL_BASE_URL" \\\n            "$BIEL_API_BASE_URL/api/v1/projects/$BIEL_PROJECT_SLUG/sources/"; then\n            echo "\u274c Failed to deploy to Biel AI"\n            exit 1\n          fi\n          echo "\u2705 Site uploaded successfully"\n          \n          echo "Syncing site on Biel AI..."\n          if ! curl -f -X POST \\\n            -H "Authorization: Api-Key ${{ secrets.BIEL_API_TOKEN }}" \\\n            "$BIEL_API_BASE_URL/api/v1/projects/$BIEL_PROJECT_SLUG/sources/sync/"; then\n            echo "\u274c Failed to sync on Biel AI"\n            exit 1\n          fi\n          echo "\u2705 Site synced successfully"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-update-environment-variables",children:"2. Update environment variables"}),"\n",(0,s.jsxs)(n.p,{children:["Replace the placeholder values in the ",(0,s.jsx)(n.code,{children:"env"})," section:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BIEL_PROJECT_SLUG"}),": Your project slug from the Biel.ai dashboard"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BIEL_SITE_NAME"}),": A lowercase identifier for your site source (e.g., ",(0,s.jsx)(n.code,{children:"wiki"}),", ",(0,s.jsx)(n.code,{children:"docs"}),", ",(0,s.jsx)(n.code,{children:"help"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BIEL_BASE_URL"}),": Your site's public URL"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BUILD_OUTPUT_DIR"}),": Your build output directory (e.g., ",(0,s.jsx)(n.code,{children:"dist"}),", ",(0,s.jsx)(n.code,{children:"build"}),", ",(0,s.jsx)(n.code,{children:"public"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"3-add-your-build-steps",children:"3. Add your build steps"}),"\n",(0,s.jsx)(n.p,{children:"Replace the commented build steps with your actual site generation commands."}),"\n",(0,s.jsx)(n.h2,{id:"test-your-workflow",children:"Test your workflow"}),"\n",(0,s.jsx)(n.p,{children:"After setting up your workflow:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Push a change to your documentation"}),"\n",(0,s.jsxs)(n.li,{children:["Go to the ",(0,s.jsx)(n.strong,{children:"Actions"})," tab in your GitHub repository"]}),"\n",(0,s.jsx)(n.li,{children:"Verify that the workflow runs successfully"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can also trigger the workflow manually by clicking ",(0,s.jsx)(n.strong,{children:"Run workflow"})," in the Actions tab."]}),"\n",(0,s.jsx)(n.h2,{id:"get-help",children:"Get help"}),"\n",(0,s.jsxs)(n.p,{children:["If you need assistance, ",(0,s.jsx)(n.a,{href:"https://biel.ai/contact",children:"contact our support team"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(96540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);